#!/bin/rc

path=(. /bin)

req_p=`{echo -n $REQUEST_URI }

fn run {
	lpaf=home$REQUEST_URI
	rpafs='/'; wd='/'; ifs='/';
	arg = `{echo -n $REQUEST_URI}
	if (test -d $lpaf) {
		lpaf=$lpaf^'i'
	}
	for (i in $arg) {
		wd=$wd^$i
		rpafs=($rpafs $wd)
		wd=$wd'/'
	}

	echo;
	for (h in $bar) { $$h }
	mh $lpaf.md
}


fn sbar {
	echo -n '<style>.c{color:#fe9e9f;font-style:italic}a{color:#9e9ffe;text-decoration:none}img{width:150px}nav li ul{padding-left:.5em}body{background-color:#131213;color:#fff;display:flex;flex-wrap:wrap;margin:20 24%;font-family:Arial, sans-serif}article{flex:1}nav{min-width:12em;font-size:12px}ul{list-style: none}#t{flex:2;position:fixed;right:calc(5vw + 10px);width:222px;max-height:80vh;overflow-y:auto;box-sizing:border-box;background-color:#000;z-index:10}</style><meta charset=utf-8><nav>'
	ls -F home/./$rpafs | sed -e 's,/+\./+,/,g' \
	-e '/\/i\.(md)$/d' \
	-e 's/\.(md)$//' -e 's!^home!!' | sort | awk -F/ '
	 function p(x, y, s) { for(i=0; i < x-y; i+=1) printf s }
    BEGIN { lNF=2; printf "<ul>" }
    { 
        d = ""
        if(match($0, "/$"))
            d = "/"
        sub("/$", "") # Strip trailing / for dirs so NF is consistent 

        p(NF, lNF, "  тоз<ul>")
        p(lNF, NF, "</ul><hr>")
        lNF = NF

        bname = $NF d
        path = $0 d
        gsub(/[\-_]/, " ", bname)

        # To avoid false matches add trailing / even for plain files to act as delimiter
        pa = path
        gsub(/[^\/]$/, "&/", pa) 

        if(index(ENVIRON["req_p"] "/", pa) == 1)
            printf "<li><a href="path" class=\"c\">"bname"</a>"
        else 
            printf "<li><a href="path">"bname"</a>"
    }
    END { p(lNF, 2, "</ul>"); printf "</ul></nav><article>" }'
}

fn add {
	_l = $1^_^$#$1
	$_l = $*(2-)
	$1 = ($$1 $_l)
}

add bar sbar; run
